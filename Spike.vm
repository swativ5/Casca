function Spike.new 0
push constant 5
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 0
push argument 1
pop this 1
push argument 2
pop this 2
push argument 3
pop this 3
push argument 4
pop this 4
push pointer 0
return
function Spike.update 0
push argument 0
pop pointer 0
push this 0
push this 3
sub
pop this 0
push this 0
push constant 0
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
return
label IF_FALSE0
push this 4
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push pointer 0
call Spike.drawReverse 1
pop temp 0
push constant 0
return
label IF_FALSE1
push pointer 0
call Spike.draw 1
pop temp 0
push constant 0
return
function Spike.draw 0
push argument 0
pop pointer 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push this 0
push this 1
push this 2
add
push this 0
push this 2
add
push this 1
push this 2
add
call Screen.drawLine 4
pop temp 0
push this 0
push constant 1
add
push this 1
push this 2
add
push constant 1
sub
push this 0
push this 2
add
push constant 1
sub
push this 1
push this 2
add
push constant 1
sub
call Screen.drawLine 4
pop temp 0
push this 0
push this 2
push constant 2
call Math.divide 2
add
push this 1
push this 0
push this 2
add
push this 1
push this 2
add
call Screen.drawLine 4
pop temp 0
push this 0
push this 2
push constant 2
call Math.divide 2
add
push this 1
push constant 1
add
push this 0
push this 2
add
push constant 1
sub
push this 1
push this 2
add
call Screen.drawLine 4
pop temp 0
push this 0
push this 2
push constant 2
call Math.divide 2
add
push this 1
push this 0
push this 1
push this 2
add
call Screen.drawLine 4
pop temp 0
push this 0
push this 2
push constant 2
call Math.divide 2
add
push this 1
push constant 1
add
push this 0
push constant 1
add
push this 1
push this 2
add
call Screen.drawLine 4
pop temp 0
push constant 0
return
function Spike.drawReverse 0
push argument 0
pop pointer 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push this 0
push this 1
push this 0
push this 2
add
push this 1
call Screen.drawLine 4
pop temp 0
push this 0
push constant 1
add
push this 1
push constant 1
add
push this 0
push this 2
add
push constant 1
sub
push this 1
push constant 1
add
call Screen.drawLine 4
pop temp 0
push this 0
push this 1
push this 0
push this 2
push constant 2
call Math.divide 2
add
push this 1
push this 2
add
call Screen.drawLine 4
pop temp 0
push this 0
push constant 1
sub
push this 1
push this 0
push this 2
push constant 2
call Math.divide 2
add
push constant 1
sub
push this 1
push this 2
add
call Screen.drawLine 4
pop temp 0
push this 0
push this 2
add
push this 1
push this 0
push this 2
push constant 2
call Math.divide 2
add
push this 1
push this 2
add
call Screen.drawLine 4
pop temp 0
push this 0
push this 2
add
push constant 1
sub
push this 1
push this 0
push this 2
push constant 2
call Math.divide 2
add
push constant 1
sub
push this 1
push this 2
add
call Screen.drawLine 4
pop temp 0
push constant 0
return
function Spike.getCoordX 0
push argument 0
pop pointer 0
push this 0
return
function Spike.getCoordY 0
push argument 0
pop pointer 0
push this 1
return
function Spike.getSize 0
push argument 0
pop pointer 0
push this 2
return
function Spike.getReverse 0
push argument 0
pop pointer 0
push this 4
return
function Spike.copy 0
push argument 0
pop pointer 0
push this 0
push this 1
push this 2
push this 3
push this 4
call Spike.new 5
return
function Spike.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
