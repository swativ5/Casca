class Jack {
    function void main() {
        return;
    }

function void draw(int location) {
	var int memAddress; 
	let memAddress = 16384+location;
	// column 0
	do Memory.poke(memAddress, -16);
	do Memory.poke(memAddress +32, 8);
	do Memory.poke(memAddress +64, 8);
	do Memory.poke(memAddress +96, 16356);
	do Memory.poke(memAddress +128, 8228);
	do Memory.poke(memAddress +160, 8239);
	do Memory.poke(memAddress +192, -10);
	do Memory.poke(memAddress +224, 5);
	do Memory.poke(memAddress +256, 4353);
	do Memory.poke(memAddress +288, 4353);
	do Memory.poke(memAddress +320, -32738);
	do Memory.poke(memAddress +352, -16322);
	do Memory.poke(memAddress +384, -7);
	do Memory.poke(memAddress +416, -7);
	do Memory.poke(memAddress +448, -24815);
	do Memory.poke(memAddress +480, -30191);
	do Memory.poke(memAddress +512, -29167);
	do Memory.poke(memAddress +544, -31714);
	do Memory.poke(memAddress +576, -6916);
	do Memory.poke(memAddress +608, 16260);
	do Memory.poke(memAddress +640, 16260);
	do Memory.poke(memAddress +672, 16260);
	do Memory.poke(memAddress +704, -7944);
	// column 1
	do Memory.poke(memAddress +33, 1);
	do Memory.poke(memAddress +65, 1);
	do Memory.poke(memAddress +97, 2);
	do Memory.poke(memAddress +129, 2);
	do Memory.poke(memAddress +161, 15);
	do Memory.poke(memAddress +193, 6);
	do Memory.poke(memAddress +225, 10);
	do Memory.poke(memAddress +257, 8);
	do Memory.poke(memAddress +289, 8);
	do Memory.poke(memAddress +321, 7);
	do Memory.poke(memAddress +353, 7);
	do Memory.poke(memAddress +385, 9);
	do Memory.poke(memAddress +417, 9);
	do Memory.poke(memAddress +449, 8);
	do Memory.poke(memAddress +481, 8);
	do Memory.poke(memAddress +513, 8);
	do Memory.poke(memAddress +545, 7);
	do Memory.poke(memAddress +577, 3);
	do Memory.poke(memAddress +609, 2);
	do Memory.poke(memAddress +641, 2);
	do Memory.poke(memAddress +673, 2);
	do Memory.poke(memAddress +705, 1);
	return;
}
function void draw1(int location) {
	var int memAddress; 
	let memAddress = 16384+location;
	// column 0
	do Memory.poke(memAddress, -256);
	do Memory.poke(memAddress +32, 384);
	do Memory.poke(memAddress +64, 192);
	do Memory.poke(memAddress +96, -960);
	do Memory.poke(memAddress +128, -31680);
	do Memory.poke(memAddress +160, -960);
	do Memory.poke(memAddress +192, 64);
	do Memory.poke(memAddress +224, -64);
	do Memory.poke(memAddress +256, 96);
	do Memory.poke(memAddress +288, 48);
	do Memory.poke(memAddress +320, -15592);
	do Memory.poke(memAddress +352, -15560);
	do Memory.poke(memAddress +384, 96);
	do Memory.poke(memAddress +416, 64);
	do Memory.poke(memAddress +448, 15424);
	do Memory.poke(memAddress +480, 448);
	do Memory.poke(memAddress +512, 768);
	do Memory.poke(memAddress +544, -31232);
	do Memory.poke(memAddress +576, -12800);
	do Memory.poke(memAddress +608, -19456);
	do Memory.poke(memAddress +640, -31744);
	do Memory.poke(memAddress +672, -12352);
	do Memory.poke(memAddress +704, 14432);
	do Memory.poke(memAddress +736, 440);
	do Memory.poke(memAddress +768, 492);
	do Memory.poke(memAddress +800, 118);
	do Memory.poke(memAddress +832, 58);
	do Memory.poke(memAddress +864, 2);
	do Memory.poke(memAddress +896, 1);
	do Memory.poke(memAddress +928, -2047);
	do Memory.poke(memAddress +960, 1025);
	do Memory.poke(memAddress +992, 513);
	do Memory.poke(memAddress +1024, 29185);
	do Memory.poke(memAddress +1056, -8679);
	do Memory.poke(memAddress +1088, 28689);
	do Memory.poke(memAddress +1120, 49);
	do Memory.poke(memAddress +1152, 33);
	do Memory.poke(memAddress +1184, -1);
	// column 1
	do Memory.poke(memAddress +1, 3);
	do Memory.poke(memAddress +33, 6);
	do Memory.poke(memAddress +65, 12);
	do Memory.poke(memAddress +97, 8);
	do Memory.poke(memAddress +129, 2040);
	do Memory.poke(memAddress +161, 1544);
	do Memory.poke(memAddress +193, 968);
	do Memory.poke(memAddress +225, 127);
	do Memory.poke(memAddress +257, 24);
	do Memory.poke(memAddress +289, 48);
	do Memory.poke(memAddress +321, 32);
	do Memory.poke(memAddress +353, 32);
	do Memory.poke(memAddress +385, 24);
	do Memory.poke(memAddress +417, 12);
	do Memory.poke(memAddress +449, 4);
	do Memory.poke(memAddress +481, 6);
	do Memory.poke(memAddress +513, 3);
	do Memory.poke(memAddress +545, 1);
	do Memory.poke(memAddress +673, 3);
	do Memory.poke(memAddress +705, 14);
	do Memory.poke(memAddress +737, 123);
	do Memory.poke(memAddress +769, 463);
	do Memory.poke(memAddress +801, 286);
	do Memory.poke(memAddress +833, 284);
	do Memory.poke(memAddress +865, 256);
	do Memory.poke(memAddress +897, 512);
	do Memory.poke(memAddress +929, 512);
	do Memory.poke(memAddress +961, 513);
	do Memory.poke(memAddress +993, 514);
	do Memory.poke(memAddress +1025, 514);
	do Memory.poke(memAddress +1057, 611);
	do Memory.poke(memAddress +1089, 560);
	do Memory.poke(memAddress +1121, 528);
	do Memory.poke(memAddress +1153, 784);
	do Memory.poke(memAddress +1185, 511);
	return;
}
function void draw2(int location) {
	var int memAddress; 
	let memAddress = 16384+location;
	// column 0
	do Memory.poke(memAddress, 127);
	do Memory.poke(memAddress +32, 81);
	do Memory.poke(memAddress +64, 81);
	do Memory.poke(memAddress +96, -33);
	do Memory.poke(memAddress +128, 65);
	do Memory.poke(memAddress +160, 65);
	do Memory.poke(memAddress +192, -1);
	do Memory.poke(memAddress +224, -31743);
	do Memory.poke(memAddress +256, -31743);
	do Memory.poke(memAddress +288, -31743);
	do Memory.poke(memAddress +320, 1985);
	do Memory.poke(memAddress +352, 65);
	do Memory.poke(memAddress +384, 121);
	do Memory.poke(memAddress +416, 3593);
	do Memory.poke(memAddress +448, 3593);
	do Memory.poke(memAddress +480, 2575);
	do Memory.poke(memAddress +512, 2561);
	do Memory.poke(memAddress +544, 3585);
	do Memory.poke(memAddress +576, 3585);
	do Memory.poke(memAddress +608, 3585);
	do Memory.poke(memAddress +640, 1);
	do Memory.poke(memAddress +672, 1);
	do Memory.poke(memAddress +704, -2047);
	do Memory.poke(memAddress +736, 2063);
	do Memory.poke(memAddress +768, -2039);
	do Memory.poke(memAddress +800, 9);
	do Memory.poke(memAddress +832, 127);
	do Memory.poke(memAddress +864, 68);
	do Memory.poke(memAddress +896, 124);
	do Memory.poke(memAddress +928, 64);
	do Memory.poke(memAddress +960, 448);
	do Memory.poke(memAddress +992, -256);
	// column 1
	do Memory.poke(memAddress +1, 32752);
	do Memory.poke(memAddress +33, 17040);
	do Memory.poke(memAddress +65, 17040);
	do Memory.poke(memAddress +97, 32415);
	do Memory.poke(memAddress +129, 16512);
	do Memory.poke(memAddress +161, 16512);
	do Memory.poke(memAddress +193, 32767);
	do Memory.poke(memAddress +225, 18432);
	do Memory.poke(memAddress +257, 18432);
	do Memory.poke(memAddress +289, 18943);
	do Memory.poke(memAddress +321, 18688);
	do Memory.poke(memAddress +353, 20224);
	do Memory.poke(memAddress +385, 16384);
	do Memory.poke(memAddress +417, 16398);
	do Memory.poke(memAddress +449, 16398);
	do Memory.poke(memAddress +481, 16394);
	do Memory.poke(memAddress +513, 16394);
	do Memory.poke(memAddress +545, 16398);
	do Memory.poke(memAddress +577, 16398);
	do Memory.poke(memAddress +609, 16398);
	do Memory.poke(memAddress +641, 16384);
	do Memory.poke(memAddress +673, 28672);
	do Memory.poke(memAddress +705, 20481);
	do Memory.poke(memAddress +737, 20481);
	do Memory.poke(memAddress +769, 20481);
	do Memory.poke(memAddress +801, 20480);
	do Memory.poke(memAddress +833, 32512);
	do Memory.poke(memAddress +865, 13568);
	do Memory.poke(memAddress +897, 7424);
	do Memory.poke(memAddress +929, 1280);
	do Memory.poke(memAddress +961, 1280);
	do Memory.poke(memAddress +993, 2047);
	return;
}
function void draw3(int location) {
	var int memAddress; 
	let memAddress = 16384+location;
	// column 0
	do Memory.poke(memAddress, -16384);
	do Memory.poke(memAddress +32, 16384);
	do Memory.poke(memAddress +64, 16384);
	do Memory.poke(memAddress +96, -16384);
	do Memory.poke(memAddress +128, -8192);
	do Memory.poke(memAddress +160, 12288);
	do Memory.poke(memAddress +192, 6144);
	do Memory.poke(memAddress +224, -30720);
	do Memory.poke(memAddress +256, -12352);
	do Memory.poke(memAddress +288, 3120);
	do Memory.poke(memAddress +320, 24);
	do Memory.poke(memAddress +352, 8);
	do Memory.poke(memAddress +384, 8);
	do Memory.poke(memAddress +416, 14360);
	do Memory.poke(memAddress +448, 3198);
	do Memory.poke(memAddress +480, 3);
	do Memory.poke(memAddress +512, 33);
	do Memory.poke(memAddress +544, 97);
	do Memory.poke(memAddress +576, 16577);
	do Memory.poke(memAddress +608, 16385);
	do Memory.poke(memAddress +640, 25031);
	do Memory.poke(memAddress +672, 4);
	do Memory.poke(memAddress +704, -4);
	do Memory.poke(memAddress +736, 21844);
	do Memory.poke(memAddress +768, -8);
	do Memory.poke(memAddress +800, 21848);
	do Memory.poke(memAddress +832, -16);
	do Memory.poke(memAddress +864, 21856);
	do Memory.poke(memAddress +896, -64);
	do Memory.poke(memAddress +928, 21824);
	do Memory.poke(memAddress +960, -128);
	do Memory.poke(memAddress +992, 21760);
	do Memory.poke(memAddress +1024, -256);
	do Memory.poke(memAddress +1056, 22016);
	do Memory.poke(memAddress +1088, -1024);
	do Memory.poke(memAddress +1120, 21504);
	do Memory.poke(memAddress +1152, -2048);
	do Memory.poke(memAddress +1184, 20480);
	do Memory.poke(memAddress +1216, -8192);
	do Memory.poke(memAddress +1248, -24576);
	do Memory.poke(memAddress +1280, -16384);
	do Memory.poke(memAddress +1312, ~32767);
	// column 1
	do Memory.poke(memAddress +1, 3);
	do Memory.poke(memAddress +33, 2);
	do Memory.poke(memAddress +65, 2);
	do Memory.poke(memAddress +97, 3);
	do Memory.poke(memAddress +129, 3);
	do Memory.poke(memAddress +161, 4);
	do Memory.poke(memAddress +193, 12);
	do Memory.poke(memAddress +225, 8);
	do Memory.poke(memAddress +257, 8);
	do Memory.poke(memAddress +289, 8);
	do Memory.poke(memAddress +321, 248);
	do Memory.poke(memAddress +353, 131);
	do Memory.poke(memAddress +385, 390);
	do Memory.poke(memAddress +417, 256);
	do Memory.poke(memAddress +449, 128);
	do Memory.poke(memAddress +481, 68);
	do Memory.poke(memAddress +513, 2022);
	do Memory.poke(memAddress +545, 3074);
	do Memory.poke(memAddress +577, 2048);
	do Memory.poke(memAddress +609, 3456);
	do Memory.poke(memAddress +641, 3168);
	do Memory.poke(memAddress +673, 1536);
	do Memory.poke(memAddress +705, 2047);
	do Memory.poke(memAddress +737, 1365);
	do Memory.poke(memAddress +769, 2047);
	do Memory.poke(memAddress +801, 853);
	do Memory.poke(memAddress +833, 511);
	do Memory.poke(memAddress +865, 213);
	do Memory.poke(memAddress +897, 255);
	do Memory.poke(memAddress +929, 85);
	do Memory.poke(memAddress +961, 63);
	do Memory.poke(memAddress +993, 53);
	do Memory.poke(memAddress +1025, 31);
	do Memory.poke(memAddress +1057, 21);
	do Memory.poke(memAddress +1089, 15);
	do Memory.poke(memAddress +1121, 5);
	do Memory.poke(memAddress +1153, 7);
	do Memory.poke(memAddress +1185, 5);
	do Memory.poke(memAddress +1217, 3);
	do Memory.poke(memAddress +1249, 2);
	do Memory.poke(memAddress +1281, 1);
	return;
}
function void win(int location) {
	var int memAddress; 
	let memAddress = 16384+location;
	// column 0
	do Memory.poke(memAddress, -8192);
	do Memory.poke(memAddress +32, 4096);
	do Memory.poke(memAddress +64, -1024);
	do Memory.poke(memAddress +96, -28160);
	do Memory.poke(memAddress +128, 8704);
	do Memory.poke(memAddress +160, 8704);
	do Memory.poke(memAddress +192, 16896);
	do Memory.poke(memAddress +224, 16896);
	do Memory.poke(memAddress +256, 16896);
	do Memory.poke(memAddress +288, 17408);
	do Memory.poke(memAddress +320, 30720);
	do Memory.poke(memAddress +352, ~32767);
	do Memory.poke(memAddress +896, -11401);
	do Memory.poke(memAddress +928, 21841);
	do Memory.poke(memAddress +960, 22865);
	do Memory.poke(memAddress +992, 20817);
	do Memory.poke(memAddress +1024, -11913);
	// column 1
	do Memory.poke(memAddress +1, -1);
	do Memory.poke(memAddress +97, -1);
	do Memory.poke(memAddress +385, -32765);
	do Memory.poke(memAddress +417, -8164);
	do Memory.poke(memAddress +449, 8160);
	do Memory.poke(memAddress +481, 4128);
	do Memory.poke(memAddress +513, 4128);
	do Memory.poke(memAddress +545, 4128);
	do Memory.poke(memAddress +577, 4128);
	do Memory.poke(memAddress +609, 4128);
	do Memory.poke(memAddress +641, 4128);
	do Memory.poke(memAddress +673, 4128);
	do Memory.poke(memAddress +705, 4128);
	do Memory.poke(memAddress +737, -4036);
	do Memory.poke(memAddress +769, 2);
	do Memory.poke(memAddress +801, 2);
	do Memory.poke(memAddress +833, -2);
	do Memory.poke(memAddress +897, -6533);
	do Memory.poke(memAddress +929, -30136);
	do Memory.poke(memAddress +961, -24709);
	do Memory.poke(memAddress +993, -28374);
	do Memory.poke(memAddress +1025, -28341);
	// column 2
	do Memory.poke(memAddress +2, 15);
	do Memory.poke(memAddress +34, 16);
	do Memory.poke(memAddress +66, 126);
	do Memory.poke(memAddress +98, 147);
	do Memory.poke(memAddress +130, 136);
	do Memory.poke(memAddress +162, 136);
	do Memory.poke(memAddress +194, 132);
	do Memory.poke(memAddress +226, 132);
	do Memory.poke(memAddress +258, 132);
	do Memory.poke(memAddress +290, 68);
	do Memory.poke(memAddress +322, 60);
	do Memory.poke(memAddress +354, 2);
	do Memory.poke(memAddress +386, 1);
	do Memory.poke(memAddress +770, 1);
	do Memory.poke(memAddress +802, 1);
	do Memory.poke(memAddress +834, 1);
	do Memory.poke(memAddress +866, 512);
	do Memory.poke(memAddress +898, 635);
	do Memory.poke(memAddress +930, 520);
	do Memory.poke(memAddress +962, 632);
	do Memory.poke(memAddress +994, 64);
	do Memory.poke(memAddress +1026, 632);
	return;
}
function void jill(int location) {
	var int memAddress; 
	let memAddress = 16384+location;
	// column 0
	do Memory.poke(memAddress, 26368);
	do Memory.poke(memAddress +32, 20224);
	do Memory.poke(memAddress +64, -13312);
	do Memory.poke(memAddress +96, -12800);
	do Memory.poke(memAddress +128, -5120);
	do Memory.poke(memAddress +160, 7196);
	do Memory.poke(memAddress +192, 3967);
	do Memory.poke(memAddress +224, -3592);
	do Memory.poke(memAddress +256, -20032);
	do Memory.poke(memAddress +288, 24672);
	do Memory.poke(memAddress +320, 56);
	do Memory.poke(memAddress +352, -32706);
	do Memory.poke(memAddress +384, -32736);
	do Memory.poke(memAddress +416, -16288);
	do Memory.poke(memAddress +448, 64);
	do Memory.poke(memAddress +480, 192);
	do Memory.poke(memAddress +512, 384);
	do Memory.poke(memAddress +544, 768);
	do Memory.poke(memAddress +576, 1536);
	do Memory.poke(memAddress +608, 7168);
	do Memory.poke(memAddress +640, -2048);
	do Memory.poke(memAddress +672, 10240);
	do Memory.poke(memAddress +704, 11264);
	do Memory.poke(memAddress +736, 9728);
	do Memory.poke(memAddress +768, 25344);
	do Memory.poke(memAddress +800, 16832);
	do Memory.poke(memAddress +832, -8080);
	do Memory.poke(memAddress +864, -8072);
	do Memory.poke(memAddress +896, 120);
	// column 1
	do Memory.poke(memAddress +33, 12);
	do Memory.poke(memAddress +65, 4);
	do Memory.poke(memAddress +97, 12);
	do Memory.poke(memAddress +129, 15);
	do Memory.poke(memAddress +161, 56);
	do Memory.poke(memAddress +193, 96);
	do Memory.poke(memAddress +225, 960);
	do Memory.poke(memAddress +257, 800);
	do Memory.poke(memAddress +289, 412);
	do Memory.poke(memAddress +321, 231);
	do Memory.poke(memAddress +353, 57);
	do Memory.poke(memAddress +385, 15);
	do Memory.poke(memAddress +417, 3);
	do Memory.poke(memAddress +449, 511);
	do Memory.poke(memAddress +481, 3843);
	do Memory.poke(memAddress +513, 3198);
	do Memory.poke(memAddress +545, 1984);
	do Memory.poke(memAddress +577, 384);
	do Memory.poke(memAddress +609, 224);
	do Memory.poke(memAddress +641, 63);
	do Memory.poke(memAddress +673, 2);
	do Memory.poke(memAddress +705, 6);
	do Memory.poke(memAddress +737, 28);
	do Memory.poke(memAddress +769, 16);
	do Memory.poke(memAddress +801, 240);
	do Memory.poke(memAddress +833, 128);
	do Memory.poke(memAddress +865, 960);
	do Memory.poke(memAddress +897, 960);
	return;
}

}
