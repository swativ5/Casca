function Player2.new 0
push constant 5
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 0
push argument 1
pop this 1
push argument 1
pop this 2
push argument 2
pop this 3
push constant 0
pop this 4
push pointer 0
return
function Player2.jump 0
push argument 0
pop pointer 0
push this 1
push this 2
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 1
pop this 4
push this 1
push constant 1
sub
pop this 1
label IF_FALSE0
push constant 0
return
function Player2.update 0
push argument 0
pop pointer 0
push this 1
push this 2
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 1
push this 4
sub
push constant 5
add
pop this 1
push this 4
push constant 10
sub
pop this 4
label IF_FALSE0
push this 1
push this 2
gt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 2
pop this 1
push constant 0
pop this 4
label IF_FALSE1
push constant 32
push this 1
call Math.multiply 2
push this 0
push constant 16
call Math.divide 2
add
call Jack.draw2 1
pop temp 0
push constant 0
return
function Player2.getCoordX 0
push argument 0
pop pointer 0
push this 0
return
function Player2.getCoordY 0
push argument 0
pop pointer 0
push this 1
return
function Player2.getSize 0
push argument 0
pop pointer 0
push this 3
return
function Player2.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
